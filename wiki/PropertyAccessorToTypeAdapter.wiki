#summary Allows to create proxies for arbitrary types which dispatch getter and setter calls to an easy two method handler

= PropertyAccessorToTypeAdapter =

The PropertyAccessorToTypeAdapter allows to create arbitrary proxies (cglib) which dispatches access calls to the properties of the given type to a simple PropertyAccessor interface instance. Such an instance has a getValue(propertyName) and setValue(propertyName,value) method which is quite similar to an Map<String,Object> access.

Example:

{{{
TestType         testType         = PropertyAccessorToTypeAdapter.newInstance( TestType.class, this.propertyAccessor );
}}}


PropertyAccessor:
{{{
/**
   * Simple {@link PropertyAccessor} interface which reduces to a {@link #setValue(Object, Object)} and {@link #getValue(Object)}
   * method signature.
   * 
   * @author Omnaest
   */
  public static interface PropertyAccessor
  {
    /**
     * Sets the given value for the given property name.
     * 
     * @param propertyName
     * @param value
     */
    public void setValue( Object propertyName, Object value );
    
    /**
     * Returns the value related to the given property name.
     * 
     * @param propertyName
     * @return
     */
    public Object getValue( Object propertyName );
  }
}}}
